openapi: 3.0.0
info:
  title: Kanban
  description: Kanban
  version: "1.0.0-oas3"
tags:
  - name: auth
    description: 'auth'
  - name: tasks
    description: 'tasks'
  - name: kanbans
    description: 'kanbans'
paths:
  /v1/auth/login:
    post:
      operationId: login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthDto'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
 
        '422':
          description: Unprocessible Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '500':
          description: Internal Server Error
      tags:
        - auth
  /v1/tasks:
    post:
      security:
        - BearerAuth: []
      operationId: createTask
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskDto'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateTaskResponse'
 
        '422':
          description: Unprocessible Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnprocessableEntityResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '409':
          description: Task name is duplicated.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'
        '500':
          description: Internal Server Error
      tags:
        - tasks
  /v1/tasks/{id}/{direction}:
    put:
      security:
        - BearerAuth: []
      operationId: moveTask
      parameters:
        - name: id
          in: path
          description: task id
          required: true
          schema:
            type: string
            example: TAtesting
        - name: direction
          in: path
          description: should be forward or backward
          required: true
          schema:
            type: string
            enum: [forward, backward]
            example: forward
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MoveTaskResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '409':
          description: Cannot forward or backward any more.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictResponse'
        '500':
          description: Internal Server Error
      tags:
        - tasks
  /v1/tasks/{id}:
    delete:
      security:
        - BearerAuth: []
      operationId: deleteTask
      parameters:
        - name: id
          in: path
          description: task id
          required: true
          schema:
            type: string
            example: TAtesting
      responses:
        '204':
          description: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal Server Error
      tags:
        - tasks
  /v1/kanbans/{id}/tasks:
    get:
      security:
        - BearerAuth: []
      operationId: getTasksByKanbanId
      parameters:
        - name: id
          in: path
          description: kanban id
          required: true
          schema:
            type: string
            example: KAtesting
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal Server Error
      tags:
        - kanbans
  /v1/kanbans/{id}/statuses:
    get:
      security:
        - BearerAuth: []
      operationId: getStatusesByKanbanId
      parameters:
        - name: id
          in: path
          description: kanban id
          required: true
          schema:
            type: string
            example: KAtesting
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTasksResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResponse'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
        '500':
          description: Internal Server Error
      tags:
        - kanbans
components:
  securitySchemes:
    BearerAuth:            
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    AuthDto:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
    CreateTaskDto:
      type: object
      properties:
        name:
          type: string
          example: new
        kanbanId:
          type: string
          example: KAtesting
      required:
        - username
        - password
    Token:
      type: string
      example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IlUxYWEyZTY4ZS0wOGNkLTQzY2ItYTZmOC0xZTk1MWUzMWQ4MzUiLCJ1c2VybmFtZSI6InN0YW5sZXlob3lwIiwicm9sZUlkIjozLCJpYXQiOjE1NzUzNDEzMTIsImV4cCI6MTYxMTM0MTMxMiwi
    UnauthorizedResponse:
      type: object
      properties:
        error:
          type: string
          example: UNAUTHORIZED
    ForbiddenResponse:
      type: object
      properties:
        error:
          type: string
          example: FORBIDDEN
    ConflictResponse:
      type: object
      properties:
        error:
          type: string
    UnprocessableEntityResponse:
      type: object
      properties:
        error:
          type: object
          properties:
            validateErrors:
              $ref: '#/components/schemas/UnprocessableErrorDetails'
    UnprocessableErrorDetails:
      type: object
    LoginResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/LoginResponseInData'
    LoginResponseInData:
      type: object
      properties:
        token:
          $ref: '#/components/schemas/Token'
        tokenType:
            type: string
            example: Bearer
        defaultKanbanId:
          type: string
          example: KAfe68d06f-1bd6-497b-bfe4-b8b344fb4f9e
        kanbans:
          $ref: '#/components/schemas/Kanbans'
        user:
          $ref: '#/components/schemas/LoginUser'
    CreateTaskResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/CreateTaskResponseInData'
    CreateTaskResponseInData:
      type: object
      properties:
        id: 
          type: string
          example: 'TA9ad1e11c-25b9-471c-bbfc-b525a26313f5'
        lastModified:  
          type: string
          example: 'UStesting'
        name:  
          type: string
          example: 'TAnew'
        kanbanId:  
          type: string
          example: 'KAtesting'
        status:  
          type: string
          example: 'KStesting1'
        isDeleted:  
          type: boolean
          example: false
        createdAt:  
          type: string
          example: '2020-09-30T21:24:57.148Z'
        updatedAt:  
          type: string
          example: '2020-09-30T21:24:57.148Z'
    MoveTaskResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/MoveTaskResponseInData'
    MoveTaskResponseInData:
      type: object
      properties:
        id: 
          type: string
          description: new status id
          example: 'KS9ad1e11c-25b9-471c-bbfc-b525a26313f5'
        name:  
          type: string
          description: new status name
          example: 'KSnew'
    GetTasksResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetTasksResponseInData'
    GetTasksResponseInData:
      type: array
      items:
        $ref: '#/components/schemas/GetTasksResponseInDataArray'
    GetTasksResponseInDataArray:
      type: object
      properties:
        id: 
          type: string
          description: task id
          example: 'TA9ad1e11c-25b9-471c-bbfc-b525a26313f5'
        name:  
          type: string
          description: task name
          example: 'TAnew'
        status:
          type: string
          description: status id
          example: 'TSnew'
    GetStatusesResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/GetStatusesResponseInData'
    GetStatusesResponseInData:
      type: array
      items:
        $ref: '#/components/schemas/GetStatusesResponseInDataArray'
    GetStatusesResponseInDataArray:
      type: object
      properties:
        id: 
          type: string
          description: status id
          example: 'KS9ad1e11c-25b9-471c-bbfc-b525a26313f5'
        name:  
          type: string
          description: status name
          example: 'KSnew'
        order:
          type: number
          description: status order
          example: 1
    LoginUser:
      type: object
      properties:
        id:
          type: string
          example: USfe68d06f-1bd6-497b-bfe4-b8b344fb4f9e
        username:
          type: string
          example: user1
    Kanbans:
      type: array
      items:
        $ref: '#/components/schemas/Kanban'
    Kanban:
      type: object
      properties:
        id:
          type: string
          example: KAfe68d06f-1bd6-497b-bfe4-b8b344fb4f9e
